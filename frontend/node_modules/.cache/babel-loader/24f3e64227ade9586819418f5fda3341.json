{"ast":null,"code":"import _classCallCheck from\"/Users/egorbicurin/Library/Mobile Documents/com~apple~CloudDocs/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/mesto-react-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/egorbicurin/Library/Mobile Documents/com~apple~CloudDocs/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/mesto-react-auth/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";var Api=/*#__PURE__*/function(){function Api(_ref){var baseUrl=_ref.baseUrl,headers=_ref.headers;_classCallCheck(this,Api);this._baseUrl=baseUrl;this._profileUrl=baseUrl+'/users/me';this._cardsUrl=baseUrl+'/cards';this._headers=headers;}_createClass(Api,[{key:\"_createRequest\",value:function _createRequest(_ref2){var url=_ref2.url,headersObj=_ref2.headersObj,method=_ref2.method,body=_ref2.body;return fetch(url,{method:method,headers:headersObj,body:body}).then(function(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430: \".concat(res.status));});}},{key:\"getProfile\",value:function getProfile(){return this._createRequest({url:this._profileUrl,headersObj:this._headers,method:'GET'});}},{key:\"getInitialCards\",value:function getInitialCards(){return this._createRequest({url:this._cardsUrl,headersObj:this._headers,method:'GET'});}},{key:\"chahgeProfile\",value:function chahgeProfile(newData){return this._createRequest({url:this._profileUrl,headersObj:this._headers,method:'PATCH',body:JSON.stringify(newData)});}},{key:\"changeAvatar\",value:function changeAvatar(avatar){return this._createRequest({url:\"\".concat(this._profileUrl,\"/avatar\"),headersObj:this._headers,method:'PATCH',body:JSON.stringify(avatar)});}},{key:\"addNewCard\",value:function addNewCard(cardData){return this._createRequest({url:this._cardsUrl,headersObj:this._headers,method:'POST',body:JSON.stringify(cardData)});}},{key:\"deleteCard\",value:function deleteCard(idCard){return this._createRequest({url:\"\".concat(this._cardsUrl,\"/\").concat(idCard),headersObj:this._headers,method:'DELETE'});}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(idCard,like){return this._createRequest({url:\"\".concat(this._cardsUrl,\"/likes/\").concat(idCard),headersObj:this._headers,method:like?'PUT':'DELETE'});}}]);return Api;}();var apiOptions={baseUrl:'https://mesto.nomoreparties.co/v1/cohort-20',headers:{authorization:'73878bf0-187e-4ea2-beea-67c91647b84f','Content-Type':'application/json'}};var api=new Api(apiOptions);export default api;","map":{"version":3,"sources":["/Users/egorbicurin/Library/Mobile Documents/com~apple~CloudDocs/Яндекс.Практикум/mesto-react-auth/src/utils/api.js"],"names":["Api","baseUrl","headers","_baseUrl","_profileUrl","_cardsUrl","_headers","url","headersObj","method","body","fetch","then","res","ok","json","Promise","reject","status","_createRequest","newData","JSON","stringify","avatar","cardData","idCard","like","apiOptions","authorization","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._profileUrl = baseUrl + '/users/me';\n    this._cardsUrl = baseUrl + '/cards';\n    this._headers = headers;\n  }\n\n  _createRequest({url, headersObj, method, body}) {\n    return fetch(url, {method: method, headers: headersObj, body: body})\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getProfile() {\n    return this._createRequest({\n      url: this._profileUrl,\n      headersObj: this._headers,\n      method: 'GET'})\n  }\n\n  getInitialCards() {\n    return this._createRequest({\n      url: this._cardsUrl,\n      headersObj: this._headers,\n      method: 'GET'})\n  }\n\n  chahgeProfile(newData) {\n    return this._createRequest({\n      url: this._profileUrl,\n      headersObj: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(newData)\n    })\n  }\n\n  changeAvatar(avatar) {\n    return this._createRequest({\n      url: `${this._profileUrl}/avatar`,\n      headersObj: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(avatar)\n    })\n  }\n\n  addNewCard(cardData) {\n    return this._createRequest({\n      url: this._cardsUrl,\n      headersObj: this._headers,\n      method: 'POST',\n      body: JSON.stringify(cardData)\n    })\n  }\n\n  deleteCard(idCard) {\n    return this._createRequest({\n      url: `${this._cardsUrl}/${idCard}`,\n      headersObj: this._headers,\n      method: 'DELETE'\n    })\n  }\n\n  changeLikeCardStatus(idCard, like) {\n    return this._createRequest({\n      url: `${this._cardsUrl}/likes/${idCard}`,\n      headersObj: this._headers,\n      method: like ? 'PUT' : 'DELETE'\n    })\n  }\n}\n\nconst apiOptions = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20',\n  headers: {\n    authorization: '73878bf0-187e-4ea2-beea-67c91647b84f',\n    'Content-Type': 'application/json'\n  }\n};\n\nconst api = new Api(apiOptions);\nexport default api;"]},"metadata":{},"sourceType":"module"}