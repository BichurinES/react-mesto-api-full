{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this._baseUrl = baseUrl;\n    this._profileUrl = baseUrl + '/users/me';\n    this._cardsUrl = baseUrl + '/cards';\n    this._headers = headers;\n  }\n\n  _createRequest({\n    url,\n    headersObj,\n    method,\n    body\n  }) {\n    return fetch(url, {\n      method: method,\n      headers: headersObj,\n      body: body\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getProfile() {\n    return this._createRequest({\n      url: this._profileUrl,\n      headersObj: this._headers,\n      method: 'GET'\n    });\n  }\n\n  getInitialCards() {\n    return this._createRequest({\n      url: this._cardsUrl,\n      headersObj: this._headers,\n      method: 'GET'\n    });\n  }\n\n  chahgeProfile(newData) {\n    return this._createRequest({\n      url: this._profileUrl,\n      headersObj: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(newData)\n    });\n  }\n\n  changeAvatar(avatar) {\n    return this._createRequest({\n      url: `${this._profileUrl}/avatar`,\n      headersObj: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(avatar)\n    });\n  }\n\n  addNewCard(cardData) {\n    return this._createRequest({\n      url: this._cardsUrl,\n      headersObj: this._headers,\n      method: 'POST',\n      body: JSON.stringify(cardData)\n    });\n  }\n\n  deleteCard(idCard) {\n    return this._createRequest({\n      url: `${this._cardsUrl}/${idCard}`,\n      headersObj: this._headers,\n      method: 'DELETE'\n    });\n  }\n\n  changeLikeCardStatus(idCard, like) {\n    return this._createRequest({\n      url: `${this._cardsUrl}/likes/${idCard}`,\n      headersObj: this._headers,\n      method: like ? 'PUT' : 'DELETE'\n    });\n  }\n\n}\n\nconst apiOptions = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20',\n  headers: {\n    authorization: '73878bf0-187e-4ea2-beea-67c91647b84f',\n    'Content-Type': 'application/json'\n  }\n};\nconst api = new Api(apiOptions);\nexport default api;","map":{"version":3,"sources":["/Users/egorbicurin/Library/Mobile Documents/com~apple~CloudDocs/Яндекс.Практикум/mesto-react-auth/src/utils/api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_profileUrl","_cardsUrl","_headers","_createRequest","url","headersObj","method","body","fetch","then","res","ok","json","Promise","reject","status","getProfile","getInitialCards","chahgeProfile","newData","JSON","stringify","changeAvatar","avatar","addNewCard","cardData","deleteCard","idCard","changeLikeCardStatus","like","apiOptions","authorization","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor({baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._profileUrl = baseUrl + '/users/me';\n    this._cardsUrl = baseUrl + '/cards';\n    this._headers = headers;\n  }\n\n  _createRequest({url, headersObj, method, body}) {\n    return fetch(url, {method: method, headers: headersObj, body: body})\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getProfile() {\n    return this._createRequest({\n      url: this._profileUrl,\n      headersObj: this._headers,\n      method: 'GET'})\n  }\n\n  getInitialCards() {\n    return this._createRequest({\n      url: this._cardsUrl,\n      headersObj: this._headers,\n      method: 'GET'})\n  }\n\n  chahgeProfile(newData) {\n    return this._createRequest({\n      url: this._profileUrl,\n      headersObj: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(newData)\n    })\n  }\n\n  changeAvatar(avatar) {\n    return this._createRequest({\n      url: `${this._profileUrl}/avatar`,\n      headersObj: this._headers,\n      method: 'PATCH',\n      body: JSON.stringify(avatar)\n    })\n  }\n\n  addNewCard(cardData) {\n    return this._createRequest({\n      url: this._cardsUrl,\n      headersObj: this._headers,\n      method: 'POST',\n      body: JSON.stringify(cardData)\n    })\n  }\n\n  deleteCard(idCard) {\n    return this._createRequest({\n      url: `${this._cardsUrl}/${idCard}`,\n      headersObj: this._headers,\n      method: 'DELETE'\n    })\n  }\n\n  changeLikeCardStatus(idCard, like) {\n    return this._createRequest({\n      url: `${this._cardsUrl}/likes/${idCard}`,\n      headersObj: this._headers,\n      method: like ? 'PUT' : 'DELETE'\n    })\n  }\n}\n\nconst apiOptions = {\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-20',\n  headers: {\n    authorization: '73878bf0-187e-4ea2-beea-67c91647b84f',\n    'Content-Type': 'application/json'\n  }\n};\n\nconst api = new Api(apiOptions);\nexport default api;"]},"metadata":{},"sourceType":"module"}