{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co';\nexport function register({\n  password,\n  email\n}) {\n  console.log(JSON.stringify({\n    password,\n    email\n  }));\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      password,\n      email\n    }).then(response => {\n      try {\n        return response.json();\n      } catch (error) {\n        return error;\n      }\n    }).then(res => {\n      return res;\n    }).catch(err => {\n      return err.error;\n    })\n  });\n}","map":{"version":3,"sources":["/Users/egorbicurin/Library/Mobile Documents/com~apple~CloudDocs/Яндекс.Практикум/mesto-react-auth/src/components/Auth.js"],"names":["BASE_URL","register","password","email","console","log","JSON","stringify","fetch","method","headers","body","then","response","json","error","res","catch","err"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,SAASC,QAAT,CAAkB;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAlB,EAAqC;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAe;AAACL,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAf,CAAZ;AACA,SAAOK,KAAK,CAAE,GAAER,QAAS,SAAb,EAAuB;AACjCS,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwB;AAKjCC,IAAAA,IAAI,EAAEL,IAAI,CAACC,SAAL,CAAe;AAACL,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAAf,EACHS,IADG,CACGC,QAAD,IAAc;AAClB,UAAI;AACF,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAFD,CAEE,OAAMC,KAAN,EAAa;AACb,eAAOA,KAAP;AACD;AACF,KAPG,EAQHH,IARG,CAQGI,GAAD,IAAS;AAAC,aAAOA,GAAP;AAAW,KARvB,EASHC,KATG,CASIC,GAAD,IAAS;AAAC,aAAOA,GAAG,CAACH,KAAX;AAAiB,KAT9B;AAL2B,GAAvB,CAAZ;AAgBD","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\nexport function register({password, email}) {\n  console.log(JSON.stringify({password, email}));\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\" \n    },\n    body: JSON.stringify({password, email})\n      .then((response) => {\n        try {\n          return response.json();\n        } catch(error) {\n          return error;\n        }\n      })\n      .then((res) => {return res})\n      .catch((err) => {return err.error})\n  })\n}"]},"metadata":{},"sourceType":"module"}