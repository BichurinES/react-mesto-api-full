{"ast":null,"code":"class Api {\n  constructor(baseUrl) {\n    this._baseUrl = baseUrl;\n    this._profileUrl = baseUrl + '/users/me';\n    this._cardsUrl = baseUrl + '/cards';\n  }\n\n  _createRequest({\n    url,\n    headersObj,\n    method,\n    body\n  }) {\n    return fetch(url, {\n      method: method,\n      headers: headersObj,\n      body: body\n    }).then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n\n      return Promise.reject(`Ошибка: ${res.status}`);\n    });\n  }\n\n  getProfile(_id) {\n    return this._createRequest({\n      url: this._profileUrl,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    });\n  }\n\n  getInitialCards(_id) {\n    return this._createRequest({\n      url: this._cardsUrl,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'\n    });\n  }\n\n  chahgeProfile(_id, newData) {\n    return this._createRequest({\n      url: this._profileUrl,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify(newData)\n    });\n  }\n\n  changeAvatar(_id, avatar) {\n    return this._createRequest({\n      url: `${this._profileUrl}/avatar`,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify(avatar)\n    });\n  }\n\n  addNewCard(_id, cardData) {\n    return this._createRequest({\n      url: this._cardsUrl,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(cardData)\n    });\n  }\n\n  deleteCard(_id, idCard) {\n    return this._createRequest({\n      url: `${this._cardsUrl}/${idCard}`,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'DELETE'\n    });\n  }\n\n  changeLikeCardStatus(_id, idCard, like) {\n    return this._createRequest({\n      url: `${this._cardsUrl}/likes/${idCard}`,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: like ? 'PUT' : 'DELETE'\n    });\n  }\n\n}\n\nconst baseUrl = 'https://mesto.nomoreparties.co/v1/cohort-20';\nconst api = new Api(baseUrl);\nexport default api;","map":{"version":3,"sources":["/Users/egor_bichurin/Library/Mobile Documents/com~apple~CloudDocs/Яндекс.Практикум/mesto-react-auth/src/utils/api.js"],"names":["Api","constructor","baseUrl","_baseUrl","_profileUrl","_cardsUrl","_createRequest","url","headersObj","method","body","fetch","headers","then","res","ok","json","Promise","reject","status","getProfile","_id","authorization","getInitialCards","chahgeProfile","newData","JSON","stringify","changeAvatar","avatar","addNewCard","cardData","deleteCard","idCard","changeLikeCardStatus","like","api"],"mappings":"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","sourcesContent":["class Api {\n  constructor(baseUrl) {\n    this._baseUrl = baseUrl;\n    this._profileUrl = baseUrl + '/users/me';\n    this._cardsUrl = baseUrl + '/cards';\n  }\n\n  _createRequest({url, headersObj, method, body}) {\n    return fetch(url, {method: method, headers: headersObj, body: body})\n      .then((res) => {\n        if (res.ok) {\n          return res.json();\n        }\n\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getProfile(_id) {\n    return this._createRequest({\n      url: this._profileUrl,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'})\n  }\n\n  getInitialCards(_id) {\n    return this._createRequest({\n      url: this._cardsUrl,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'GET'})\n  }\n\n  chahgeProfile(_id, newData) {\n    return this._createRequest({\n      url: this._profileUrl,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify(newData)\n    })\n  }\n\n  changeAvatar(_id, avatar) {\n    return this._createRequest({\n      url: `${this._profileUrl}/avatar`,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify(avatar)\n    })\n  }\n\n  addNewCard(_id, cardData) {\n    return this._createRequest({\n      url: this._cardsUrl,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(cardData)\n    })\n  }\n\n  deleteCard(_id, idCard) {\n    return this._createRequest({\n      url: `${this._cardsUrl}/${idCard}`,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: 'DELETE'\n    })\n  }\n\n  changeLikeCardStatus(_id, idCard, like) {\n    return this._createRequest({\n      url: `${this._cardsUrl}/likes/${idCard}`,\n      headersObj: {\n        authorization: _id,\n        'Content-Type': 'application/json'\n      },\n      method: like ? 'PUT' : 'DELETE'\n    })\n  }\n}\n\nconst baseUrl = 'https://mesto.nomoreparties.co/v1/cohort-20';\n\nconst api = new Api(baseUrl);\nexport default api;"]},"metadata":{},"sourceType":"module"}