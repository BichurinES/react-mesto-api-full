{"ast":null,"code":"var _jsxFileName = \"/Users/egor_bichurin/Library/Mobile Documents/com~apple~CloudDocs/\\u042F\\u043D\\u0434\\u0435\\u043A\\u0441.\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0443\\u043C/mesto-react-auth/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function nameChangeHandle(evt) {\n    setName(evt.target.value);\n  }\n\n  function descriptionChangeHandle(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    name: props.name,\n    className: \"popup__form\",\n    onSubmit: props.onSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"popup__title\",\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"popup__field-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name-field\",\n        className: \"popup__form-field popup__form-field_type_name\",\n        name: \"name\",\n        placeholder: \"\\u0418\\u043C\\u044F\",\n        minLength: \"2\",\n        maxLength: \"40\",\n        required: true,\n        noValidate: true,\n        value: name,\n        onChange: nameChangeHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"name-field-error popup__error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"about-field\",\n        className: \"popup__form-field popup__form-field_type_about\",\n        name: \"about\",\n        placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n        minLength: \"2\",\n        maxLength: \"200\",\n        required: true,\n        noValidate: true,\n        value: description,\n        onChange: descriptionChangeHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"about-field-error popup__error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      className: `popup__submit-button popup__submit-button_type_${props.name}`,\n      value: props.isLoading ? 'Сохранение...' : props.buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"mnwQBeDFN/kGzccNxCLcYLb7zpM=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/egor_bichurin/Library/Mobile Documents/com~apple~CloudDocs/Яндекс.Практикум/mesto-react-auth/src/components/Login.js"],"names":["React","Login","props","name","setName","useState","description","setDescription","nameChangeHandle","evt","target","value","descriptionChangeHandle","handleSubmit","preventDefault","onUpdateUser","about","onSubmit","title","isLoading","buttonText"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACK,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,KAAK,CAACK,QAAN,CAAe,EAAf,CAAtC;;AAEA,WAASG,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7BL,IAAAA,OAAO,CAACK,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAP;AACD;;AAED,WAASC,uBAAT,CAAiCH,GAAjC,EAAsC;AACpCF,IAAAA,cAAc,CAACE,GAAG,CAACC,MAAJ,CAAWC,KAAZ,CAAd;AACD;;AAED,WAASE,YAAT,CAAsBJ,GAAtB,EAA2B;AACzBA,IAAAA,GAAG,CAACK,cAAJ;AAEAZ,IAAAA,KAAK,CAACa,YAAN,CAAmB;AACjBZ,MAAAA,IADiB;AAEjBa,MAAAA,KAAK,EAAEV;AAFU,KAAnB;AAID;;AAED,sBACE;AAAM,IAAA,IAAI,EAAEJ,KAAK,CAACC,IAAlB;AAAwB,IAAA,SAAS,EAAC,aAAlC;AAAgD,IAAA,QAAQ,EAAED,KAAK,CAACe,QAAhE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA,gBAA8Bf,KAAK,CAACgB;AAApC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAU,MAAA,SAAS,EAAC,mBAApB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,YAAtB;AAAmC,QAAA,SAAS,EAAC,+CAA7C;AAA6F,QAAA,IAAI,EAAC,MAAlG;AACA,QAAA,WAAW,EAAC,oBADZ;AACkB,QAAA,SAAS,EAAC,GAD5B;AACgC,QAAA,SAAS,EAAC,IAD1C;AAC+C,QAAA,QAAQ,MADvD;AACwD,QAAA,UAAU,MADlE;AACmE,QAAA,KAAK,EAAEf,IAD1E;AACgF,QAAA,QAAQ,EAAEK;AAD1F;AAAA;AAAA;AAAA;AAAA,cADF,eAGE;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,aAAtB;AAAoC,QAAA,SAAS,EAAC,gDAA9C;AAA+F,QAAA,IAAI,EAAC,OAApG;AACA,QAAA,WAAW,EAAC,iCADZ;AACqB,QAAA,SAAS,EAAC,GAD/B;AACmC,QAAA,SAAS,EAAC,KAD7C;AACmD,QAAA,QAAQ,MAD3D;AAC4D,QAAA,UAAU,MADtE;AACuE,QAAA,KAAK,EAAEF,WAD9E;AAC2F,QAAA,QAAQ,EAAEM;AADrG;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AAAM,QAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAUE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAG,kDAAiDV,KAAK,CAACC,IAAK,EAF1E;AAGE,MAAA,KAAK,EAAED,KAAK,CAACiB,SAAN,GAAkB,eAAlB,GAAoCjB,KAAK,CAACkB;AAHnD;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GAtCQnB,K;;KAAAA,K;AAwCT,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nfunction Login(props) {\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState('');\n\n  function nameChangeHandle(evt) {\n    setName(evt.target.value)\n  }\n\n  function descriptionChangeHandle(evt) {\n    setDescription(evt.target.value)\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n  \n    props.onUpdateUser({\n      name,\n      about: description,\n    });\n  } \n\n  return (\n    <form name={props.name} className=\"popup__form\" onSubmit={props.onSubmit}>\n      <h2 className=\"popup__title\">{props.title}</h2>\n      <fieldset className=\"popup__field-wrap\">\n        <input type=\"text\" id=\"name-field\" className=\"popup__form-field popup__form-field_type_name\" name=\"name\"\n        placeholder=\"Имя\" minLength=\"2\" maxLength=\"40\" required noValidate value={name} onChange={nameChangeHandle} />\n        <span className=\"name-field-error popup__error\"></span>\n        <input type=\"text\" id=\"about-field\" className=\"popup__form-field popup__form-field_type_about\" name=\"about\"\n        placeholder=\"О себе\" minLength=\"2\" maxLength=\"200\" required noValidate value={description} onChange={descriptionChangeHandle} />\n        <span className=\"about-field-error popup__error\"></span>\n      </fieldset>\n      <input \n        type=\"submit\" \n        className={`popup__submit-button popup__submit-button_type_${props.name}`} \n        value={props.isLoading ? 'Сохранение...' : props.buttonText} />\n    </form>\n  );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}